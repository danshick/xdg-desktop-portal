<?xml version="1.0"?>
<!--
 Copyright (C) 2016, 2019 Red Hat, Inc.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library. If not, see <http://www.gnu.org/licenses/>.

 Authors: Matthias Clasen <mclasen@redhat.com>
          Bastien Nocera <hadess@hadess.net>
-->
<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <!--
      org.freedesktop.portal.MemoryMonitor:
      @short_description: Memory monitoring portal

      The Memory Monitor interface provides information about low system
      memory to sandboxed applications. It is not a portal in the strict
      sense, since it does not involve user interaction. Applications are
      expected to use this interface indirectly, via a library API
      such as the GLib GMemoryMonitor interface.

      This documentation describes version 1 of this interface.
  -->
  <interface name="org.freedesktop.portal.MemoryMonitor">
    <!--
        LowMemoryWarning:
        @level: An integer representing the level of low memory warning.

        Signal emitted when a particular low memory situation happens. Possible levels are:
        <variablelist>
          <varlistentry>
            <term>1</term>
            <listitem><para>
              Memory on the device is low, processes should free up unneeded resources so they can be used elsewhere.
            </para></listitem>
          </varlistentry>
          <varlistentry>
            <term>2</term>
            <listitem><para>
              Same as "low" but the device has even less free memory, so processes should try harder to free up unneeded resources. If your process does not need to stay running, it is a good time for it to quit.
            </para></listitem>
          </varlistentry>
          <varlistentry>
            <term>3</term>
            <listitem><para>
              The system will start kill()'ing processes to reclaim memory, including background processes.
            </para></listitem>
          </varlistentry>
        </variablelist>
    -->
    <signal name="LowMemoryWarning">
      <arg name="level" type="u"/>
    </signal>

    <property name="version" type="u" access="read"/>
  </interface>
</node>
